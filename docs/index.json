[
{
	"uri": "https://lumina-desktop.github.io/features/",
	"title": "Features of Lumina",
	"tags": [],
	"description": "",
	"content": "The Lumina® desktop is designed to be fast, customizable, flexible, and lightweight. Lumina® works great in multi-monitor configurations and with high-resolution monitors (4K+) as well as single-screen configurations on laptops or tablets. Lumina is designed to work out-of-box without end user apps, and requires fewer dependencies than most other desktop environments. The Lumina® desktop does not require PolicyKit, HAL or systemd. This makes Lumina® very portable and the desktop can be run on most flavors of BSD and GNU/Linux.\nDesktop Features Quick and Easy to Configure Quickly and easily change your display and theming settings using the Lumina® configuration utility (lumina-config on the command-line). It is also a fully-featured desktop configuration where nearly every single item on the desktop can be changed or customized as desired.\n All desktop configuration files are simple plain-text files on the back-end. Desktop will dynamically detect configuration changes to adjust as needed. Appearance profiles can easily be used to reproduce the look and feel of other common desktop systems. Custom appearance profiles can also be created/used. The entire desktop appearance is governed by a simple plugin system  Show desktop icons for files in the \u0026ldquo;Desktop\u0026rdquo; directory, or hide everything for a more minimalistic look. Add desktop widgets to the screen  Application launcher icons Audio file player Calendar Notepad RSS/Atom Feed Reader System statistics monitor (CPU, memory, temperatures) Desktop Links for removable media (if supported by your OS).   Customize the right-click desktop context menu  Shortcuts to any/all applications Launch basic apps (default terminal or file manager) Provide a task manager for the true desktop-minimalists Provide a way to run user-created \u0026ldquo;menu scripts\u0026rdquo; to dynamically generate new types of context menu items.      Fast and Responsive Lumina® is extremely minimal and can be used on systems with as little as 1GB of memory. It is very self-contained and does not require any particular utilities or libraries aside from very small handful. Lumina is designed around the concept of complete modularity. Your applications are completely independant from the desktop itself and can be added/removed at will without loss of functionality.\nOptional Stand-Alone Utilities There are many utilities that are developed alongside the Lumina desktop to ensure that a full-range of functionality is available if nothing other than the Lumina desktop and utilities are installed. Each of these utilities is available independently of the desktop and can be built or used as a separate stand-alone utility on other desktops or operating systems as desired. These utilities may have special integration options when used in conjunction with the Lumina desktop however.\nInsight File Manager Browse the local filesystem and manage files and directories with the Insight File Manager (lumina-fm on the command line).\n Browse files/directories. Multiple tab support as well as support for two side-by-side directories per tab. Provide instant viewing/rollback of files or directories that are available in ZFS snapshots. Provide support for custom bookmarks. Provides basic interactions with Git to clone a repository or view the status of a local repo. Multiple viewing and sorting options Built-in slideshow viewer for image files with very basic image editing functionality (rotation, zoom in/out) Built-in multimedia viewer for basic playback of local files.  File Archiver Extract or compress files with the Lumina Archiver (lumina-archiver on the command line).\n Compatible with many archive file formats. Easy to use and understand. Create/modify archives, or extract/view individual items from within an archive. Able to burn ISO and IMG boot images to a USB device. Integrated into the Insight file manager menu options for quick access.  Scientific Calculator Simple and Scientific calculation provided with Lumina Calculator (lumina-calculator on the command line).\n Works with a keyboard numpad. Calculator history can be saved as a text document. Advanced scientific calculation is included.  Text Editor Simple text editing provided by Lumina Text Editor (lumina-textedit or lte on the command line).\n Plaintext editor supporting variable fonts and font sizes. Customizable display supports showing line numbers, syntax highlighting, and dynamic word wrapping. Editor autodetects the text file type and applies appropriate syntax highlighting. The user can modify highlighting rules in real time.  Multimedia Playback and Pandora Radio Streaming Local file playlist and Pandora radio streaming provided by the Lumina Media Player (lumina-mediaplayer on the command line).\n Create playlists of local multimedia files (audio and video) Stream music from the Pandora radio streaming service (USA only) Minimizes into the system tray for no-interruption background music.  Create/Edit Screenshots Take screenshots of individual applications, individual screens, or the entire desktop session with the \u0026ldquo;print screen\u0026rdquo; keyboard shortcut (or run lumina-screenshot on the command line).\n Easily take screenshots of anything you need (including user-defined screen regions). Option for including or excluding window borders for single-window screenshots Supports time-delayed screenshots. Crop screenshots directly in the viewer before saving them to a file Copy screenshots directly onto the system clipboard for pasting into other applications (without needing to save a file first). Instant-edit launcher for quickly saving a file and opening the system-default image editor for advanced interactions.  PDF File Viewer View PDF files and use them to give presentations easily with the Lumina PDF Viewer (lumina-pdf on the command line).\n View/Print PDF files. Also includes support for some PDF annotations such as table of contents, hyperlinks, and more! Multiple viewing options, such as full-width, full-page, two-column, and grid mode! Presentation mode with multi-monitor awareness. Also includes a presentation timer on the main screen for making sure you don\u0026rsquo;t run over time!  Multi-Monitor Management Supports configuring multi-monitor displays via the xrandr protocols (lumina-xconfig on the command line).\n Add and remove screens Save a customized screen layout as your user default. Dynamically adjust the physical position or size of each screen. Configure resolution and rotation for each screen. Create custom screen profiles and quickly load them as needed.  "
},
{
	"uri": "https://lumina-desktop.github.io/releases/",
	"title": "Releases",
	"tags": [],
	"description": "",
	"content": "Sources All of the sources for release versions of the Lumina desktop and it\u0026rsquo;s suite of utilities are available for download on the GitHub repository.\nProject Trident Project Trident is a desktop distribution of Void Linux that is created and maintained by the same authors of the Lumina Desktop, and is a quick and easy way to try out the Lumina Desktop on a Linux-based operating system.\nPre-built Packages Pre-built packages of the Lumina desktop and it\u0026rsquo;s utilities are available on many other operating systems. While we cannot list them all, the ones that we know of are:\n BSD Operating Systems  TrueOS FreeBSD OpenBSD DragonflyBSD   Linux Distributions  Project Trident Debian Gentoo Arch Probably a lot of others\u0026hellip;    "
},
{
	"uri": "https://lumina-desktop.github.io/community/",
	"title": "Community Resources",
	"tags": [],
	"description": "",
	"content": "Themes! There is a community repository for providing new theme files, color schemes, wallpapers and more! This repository is available on GitHub and contains all the instructions neccesary to help you get started.\nGet Involved!  If you are a C++/Qt developer, there are tons of areas where you could contribute!  Finding/fixing bugs Writing new interface plugins Adding functionality to existing plugins and more!   If you are a CSS developer, then you might be interested in making new themes for Lumina® (using QSS: it is very similar to CSS but specifically for Qt applications/widgets).  These themes can be created/modified directly within the Lumina® theme engine utility and get applied to all Qt5-based applications.   This website!  This webite is a simple one created using the \u0026ldquo;Hugo\u0026rdquo; static-site generator. All of the sources for this site are managed and run from our repository on GitHub and changes are always welcome!   If you found a bug or have an idea for a cool new feature, you can post bug reports or feature requests on our GitHub repository.  "
},
{
	"uri": "https://lumina-desktop.github.io/faq/",
	"title": "Frequently Asked Questions",
	"tags": [],
	"description": "",
	"content": "How is it different from other desktop environments?  Designed to work best with TrueOS® and Project Trident®, but specifically works very well for the BSD community at large. Lumina® can also be easily ported to any OS, including Linux distros). Does not require any of the commonly-used desktop implementation frameworks (DBUS, policykit, consolekit, systemd, HALD, etc..). Does not come bundled with any “end-user” applications (web browsers, email clients, multimedia software, office suites, etc..). The only utilities that Lumina brings to the table by default are the ones written specifically for the project and are generally for background/utilitarian functionality (the largest utility is the file manager). Simple text-based configuration file for setting system-wide defaults for new users. This allows distributors of the desktop to easily pre-set the system defaults/interface so it just works for the end user. Plugin-based interface design. This allows the user to make the desktop as light/heavy as desired (within reason) simply by choosing which plugins to have running on their desktop/panels. Designed to function as a general-purpose system interface – easily pre-configured to run on any type/size of device or screen. See the features page for additional details.  What operating systems is it available for? Lumina is highly portable and should work on any Unix-like operating system, with a single OS-compatibility class for porters to check/update as necessary. It has already been ported to all the various BSD operating systems, as well as many of the Linux distributions.\nWhat graphical systems is it available for? Lumina is currently only available on the X11 graphical system. The code-base is designed to be easily ported to another graphical system sometime down the road (only a single file to re-implement in the new system), but at the present moment, there is no scheduled time for any conversions to take place.\nWhat does it look like?  Due to the flexibility of Lumina®’s plugin-based framework, the interface can take almost any appearance that you want (including copying other common desktop interfaces). Please view our “Screenshots” page for some examples. Note that as we continue to create more plugins with every new version of Lumina®, the variability of the interface just continues to grow. If you have a particular plugin/feature that you would like to see, please post a feature request!  How can I get involved? View the Community Page for inspiration on how to get started!\n"
},
{
	"uri": "https://lumina-desktop.github.io/screenshots/",
	"title": "Screenshots",
	"tags": [],
	"description": "",
	"content": "Want to know what Lumina® looks like in action? Here are some recent versions of the Lumina desktop, running with a number of different widgets and layouts.\nLumina 1.6.1\nLumina 1.6.0\nLumina 1.4.0\nLumina 1.3.0\nLumina 0.8.3\n"
},
{
	"uri": "https://lumina-desktop.github.io/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": "Lightweight Desktop Environment  Lumina is designed to have a small footprint, giving your system the best performance possible.  Intuitive Layout  Lumina is built to flow seamlessly between computer tasks and offers several integrated utilities in one convenient package.  Completely Customizable  Nearly everything in the interface can be configured to suit the individual workflow. From desktop icons and single-application systems to multi-monitor arrangements or a plethora of self-contained workspaces, Lumina can do it all.  Freely Available  Lumina is distributed under the 3-clause BSD license, allowing it to be used by anyone, anywhere (including in proprietary distributions).  Lumina has been written from scratch  Written in C++/Qt5 and is not based on any existing desktop’s code-base, and does not use any of the Linux-based desktop frameworks (ConsoleKit, PolicyKit, D-Bus, systemd, etc..)  Lumina uses a simple built-in interface layer  Communicate directly with the operating system (which is the only class specific to the operating system – making it simple to port/customize). Allows Lumina® to obtain system information in a fast and efficient manner while ensuring desktop stability and reliability.  Recent News  Help requested for three big items for Lumina 2022-02-08\nIn this post I mentioned some of the major work that is on the road map for Lumina, and I\u0026rsquo;ve finally made the time to expand on this a little more. In this post I\u0026rsquo;m going to cover three of the big ticket items I need help with. However before I get into that, a few points worth mentioning. C++/Qt experience is a definite requirement. It\u0026rsquo;s not that I have anything against Python or Go, but Lumina is written with C++/Qt, so that\u0026rsquo;s what you\u0026rsquo;ll need to know....    Lumina 1.6.2 released. 2021-12-25\nAnother update to Lumina is out The next update to the Lumina Desktop is out! Lumina Desktop v1.6.2 Updates in this release: Lumina-checkpass has been disabled. I mistakingly enabled this in the 1.6.1 release. After speaking with Ken about this, he reminded me that this is a part of the yet unifinished Unified Desktop. As such it is not needed with the current releases and has been disabled from being built by default....    Lumina 1.6.1 released. 2021-10-05\nYes the project is still alive. And in fact there\u0026rsquo;s been a release! Lumina Desktop v1.6.1 It\u0026rsquo;s only been 611 days\u0026hellip; that\u0026rsquo;s not too long right? Anyway onto the point, yes the project is still alive and there\u0026rsquo;s been some updates. This release encompases two main things. First is a collection of minor fixes that have gone into master since 1.6.0 came out, along with some translation updates. This includes two small additional binaries for use by the desktop....    Study the past if you would define the future. 2021-07-01\nHistory \u0026ldquo;Study the past if you would define the future.\u0026rdquo; ~Confucius Before we discuss the Lumina Desktop today, lets first go back and discuss the past. The Lumina Desktop was started in 2012 by Ken Moore. He started working on it in his free time. He wanted to design a small lightweight desktop for PC-BSD that didn\u0026rsquo;t come with the challenge of dealing with Linux-isms. However instead of designing a desktop that had BSD-isms, he decided to design the desktop to be as OS agnostic as possible with as few dependecies as possible....   "
},
{
	"uri": "https://lumina-desktop.github.io/post/",
	"title": "Random Journal Entries",
	"tags": [],
	"description": "",
	"content": "This is a collections of random thoughts, ideas, or general ramblings.\nAll Journal Entries: Newest first  Help requested for three big items for Lumina 2022-02-08\nIn this post I mentioned some of the major work that is on the road map for Lumina, and I\u0026rsquo;ve finally made the time to expand on this a little more. In this post I\u0026rsquo;m going to cover three of the big ticket items I need help with. However before I get into that, a few points worth mentioning. C++/Qt experience is a definite requirement. It\u0026rsquo;s not that I have anything against Python or Go, but Lumina is written with C++/Qt, so that\u0026rsquo;s what you\u0026rsquo;ll need to know....    Lumina 1.6.2 released. 2021-12-25\nAnother update to Lumina is out The next update to the Lumina Desktop is out! Lumina Desktop v1.6.2 Updates in this release: Lumina-checkpass has been disabled. I mistakingly enabled this in the 1.6.1 release. After speaking with Ken about this, he reminded me that this is a part of the yet unifinished Unified Desktop. As such it is not needed with the current releases and has been disabled from being built by default....    Lumina 1.6.1 released. 2021-10-05\nYes the project is still alive. And in fact there\u0026rsquo;s been a release! Lumina Desktop v1.6.1 It\u0026rsquo;s only been 611 days\u0026hellip; that\u0026rsquo;s not too long right? Anyway onto the point, yes the project is still alive and there\u0026rsquo;s been some updates. This release encompases two main things. First is a collection of minor fixes that have gone into master since 1.6.0 came out, along with some translation updates. This includes two small additional binaries for use by the desktop....    Study the past if you would define the future. 2021-07-01\nHistory \u0026ldquo;Study the past if you would define the future.\u0026rdquo; ~Confucius Before we discuss the Lumina Desktop today, lets first go back and discuss the past. The Lumina Desktop was started in 2012 by Ken Moore. He started working on it in his free time. He wanted to design a small lightweight desktop for PC-BSD that didn\u0026rsquo;t come with the challenge of dealing with Linux-isms. However instead of designing a desktop that had BSD-isms, he decided to design the desktop to be as OS agnostic as possible with as few dependecies as possible....    Maintainership Change 2021-06-23\nAfter more than 7 years of work, I have decided that it is time to let others take over the development of the Lumina Desktop project going forward. It has been an incredible task which has pushed me into areas of development that I had never previously considered. However, with work and life changes, my time for developing new functionality for Lumina has become nearly non-existent, particularly for the Qt5 -\u0026gt; Qt6 change that will be coming within the next year or so....   "
},
{
	"uri": "https://lumina-desktop.github.io/post/2022-02-08/",
	"title": "Help requested for three big items for Lumina",
	"tags": [],
	"description": "Looking for those willing to contribute to Lumina",
	"content": "In this post I mentioned some of the major work that is on the road map for Lumina, and I\u0026rsquo;ve finally made the time to expand on this a little more.\nIn this post I\u0026rsquo;m going to cover three of the big ticket items I need help with.\nHowever before I get into that, a few points worth mentioning. C++/Qt experience is a definite requirement. It\u0026rsquo;s not that I have anything against Python or Go, but Lumina is written with C++/Qt, so that\u0026rsquo;s what you\u0026rsquo;ll need to know. Along with that you will need to be willing to submit your code contributions under a BSD 3-Clause.\nCmake conversion. Right now there are a bunch of build issues on various Linux OSes because of some weird interaction between using Qmake with the .pro files and building them with make. While Qt6 is moving away from qmake and going to cmake, because of Qt drama, and the fully open version of Qt6 probably being the LTS release with 6.1\u0026hellip; this is not an immediate need.\nAlso even after Qt6.1 is released, we can technically keep using Qt5 for quite a while until it\u0026rsquo;s EOL\u0026rsquo;d. However it would be nice to have this as a build option to help distro and OS packagers build Lumina with less headache.\nI cant believe I just implied cmake would be less headache\u0026hellip; where have I gone wrong in life. lol\nLumina-FM re-write As I mentioned in the prior post, the new file manager will need to function using the QFileSystem class. Beyond that there are really only a few definite needs for a new FM for Lumina. So otherwise there\u0026rsquo;s a clean slate for us to design from. Aside from the normal design of a split design with folders in a panel on the left and the browser on the right\u0026hellip; I\u0026rsquo;m open to ideas. That being said, we don\u0026rsquo;t be doing Miller columns, if you want that use MacOS.\nSo the other main needs are:\n  A toggle-able UI panel that would include a slider for accessing ZFS snapshots. This is IMHO, one of the killer features that Lumina offers that no one else does. As a result this is an absolute requirement.\n  The Right click menu needs to be written in a way that it\u0026rsquo;s easily extensible for actions. Obviously the default would include all the normal ones, open/open-with, cut/copy/paste/delete, create new file/directory/etc, open terminal here, etc However Id like to make an additional section like we currently have for additional actions, but to create new ones in a subdir in the sources so it\u0026rsquo;d be possible to be as easy as adding a new c and h file into the sources and linking them into the FM code. Similar to how Panel widgets for the desktop panel operate. That way they\u0026rsquo;re somewhat removed from the FM itself, and it makes it a bit easier for people to create their own and hopefully be willing to upstream them. Initially of all the options out there we could add, the ones I can think of initially would be the \u0026lsquo;add to archive\u0026rsquo; and \u0026lsquo;extract from archive\u0026rsquo; that we already have, and a shred option if someone has a shred utility installed on their system. (Yes this wont be effective on a ZFS dataset with snapshots, but not everyone uses Lumina on ZFS, so lets give them some secure file deletion options). I have a bunch of other ideas that I want to add in the future, but we\u0026rsquo;ve got to get the rest of the FM in place first.\n  Currently Lumina displays the progress of operations in the desktop panel, I\u0026rsquo;d prefer to bring that into the main FM itself as a toggle-able panel, with the option to enable desktop notifications if a user desires. Currently the dialog is pretty basic. I was working on a more informative progress panel, but I stopped working on it once I realized that the FM needed an entire overhaul.\n  One thing that I\u0026rsquo;ve liked about Lumina is that its customization. You can set it up the way you want. I\u0026rsquo;d like to take the oddly missing feature in most file managers and extend that to the FM as well. Id like to have a configuration system where panels can be enabled/disabled based on the users wishes. This is easy enough to do with simply checking a config file when starting the FM to see if a user has certain features enabled. If a user doesn\u0026rsquo;t want the directory panel to show, easy, then can just disable it in a config file. If a user wants to define a custom background for the file manager, easy, they can set it in a config file. Want to have the browser start with two tabs to specific directories, easy, set that in a config file. This is work I can do myself, but obviously it\u0026rsquo;s something that someone will need to take into account while we\u0026rsquo;re working on this.\nLastly, there are a few features I\u0026rsquo;ve always wanted in a FM that I\u0026rsquo;ve not seen done, and I\u0026rsquo;m not sure if people would like it\u0026hellip; so they\u0026rsquo;re going to be some of those user toggle-able features.\n  In the left directory panel, where the directories are shown\u0026hellip; also display the folder data size. That way someone doesn\u0026rsquo;t have to right click and select properties. To prevent system strain, I\u0026rsquo;d say that we allow a user to set an upper limit\u0026hellip; say 500mb\u0026hellip; and if the folder size is above that it\u0026rsquo;ll just show \u0026gt; 500mb. If you\u0026rsquo;re having a hard time grasping what I mean, imagine the output of du -sh * for each directory in a folder that you\u0026rsquo;re sitting in, being displayed beside the system folder in the tree panel.\n  Lumina currently doesn\u0026rsquo;t save thumbnails, they\u0026rsquo;re re-generated every time you enter a directory if they\u0026rsquo;re not in ram. I\u0026rsquo;d like to enable saving this, but with multiple options. First being the classic method of saving these in ~/. I personally hate that this is done, because my user folder shouldn\u0026rsquo;t be the storage place for thumbnails. IMHO thumbnails should be where the files are located. After all there\u0026rsquo;s no reason each user should have to generate thumbnails for images/videos on a NAS. But since this is what most people are used to, this should be an option that they can choose. Second option is to create a .directory where they can be stored. That way they are rendered once, saved, and always available in that folder. Move the folder, no problem, thumbnails get moved as well, meaning they never have to be rendered again. Third option is to keep the current in place of Lumina not saving thumbnails anywhere than in memory, though we can change this to /tmp if that\u0026rsquo;s easier code wise considering the other two options.\n  A longer term feature Id love to have is something similar to slookup baked into the FM itself for file searching, again user toggleable.\n  Lumina 2.0 Window Manager. This is well outside my capabilities, but I do have a secret plan that I\u0026rsquo;ll explain in a bit. Ken started this work, and in some ways the Window Manager does work. You can start it, and you can load windows. But there are bunch of bugs and lots of things not completed. I haven\u0026rsquo;t looked at this code since probably late 2018, so I\u0026rsquo;m a little fuzy on what state its in. I do remember Ken saying it was only a \u0026ldquo;Few Months Away\u0026rdquo; from being done. But at that time he was working on it for a couple hours a day, so\u0026hellip; lets guestimate 100-250 hours of effort left.\nIdeally I could convince him to finish it, so someone else doesn\u0026rsquo;t have the initial uphill battle of figuring out what he finished and what still needs to be worked on. So here we are at my secret evil plan\u0026hellip; however\u0026hellip; by reading further you have to promise that you will keep this a secret as well. This is between you\u0026hellip; me\u0026hellip; and the internet. I\u0026rsquo;ve turned on sponsorships for the Lumina Project. All of the money that comes in is being set aside and will continue to grow until such time that there\u0026rsquo;s enough money to actually hire someone to finish this work.\nSince Ken started it, he\u0026rsquo;s the logical choice, but with work and family life that may not be possible. However I\u0026rsquo;m sure if the number becomes decent enough I can convince his wife to convince him to do it. Remember\u0026hellip; Happy Wife\u0026hellip; Happy Life. ;)\nHowever if I can\u0026rsquo;t convince his wife, then I would at least have the option to hire someone else to work on it. Or someone could just be a wonderful human being and an awesome open source developer and be interested in tackling a tough challenge.\nSo If you’ve got time and would like to help out, reach out and let me know. I really would like to make some progress on these items, and it’s going to take some outside help.\nLastly I, Tom Jones, consent to everyone giving me (Tom Jones) a hard time when they see me because I didn’t know or forgot that I knew that JT was the current developer of Lumina. Furthermore, as Penance, I also owe JT and the show listeners some BSD poetry in a future BSD Now episode.\n"
},
{
	"uri": "https://lumina-desktop.github.io/post/2021-12-25/",
	"title": "Lumina 1.6.2 released.",
	"tags": [],
	"description": "Lumina 1.6.2 released",
	"content": "Another update to Lumina is out The next update to the Lumina Desktop is out!\nLumina Desktop v1.6.2\nUpdates in this release:\n  Lumina-checkpass has been disabled. I mistakingly enabled this in the 1.6.1 release. After speaking with Ken about this, he reminded me that this is a part of the yet unifinished Unified Desktop. As such it is not needed with the current releases and has been disabled from being built by default.\n  The \u0026ldquo;Open as Root\u0026rdquo; option in Lumina-FM should now be available again to all users of the Lumina Desktop as a result of the next item in this list.\n  The qsudo code from PC-BSD/TrueOS/Project-Trident has been merged into the Lumina-Desktop as a default utility. This is a graphical utility that was originally written for PC-BSD for when a gui application needed sudo access, historically this was used by the PC-BSD package manager, however it has been included in Lumina going forward. Packagers, you can disable this in the project file if you desire, however if you do this will also disable the \u0026lsquo;Open as Root\u0026rsquo; feature in Lumina-FM as a result.\n  The icon for the Application Panel and User Menu is now able to be customized as the Start Menu icon has been. This option is available in Lumina-Configuration under \u0026ldquo;General Options\u0026rdquo;.\n  A bug preventing the user from setting the Fluxbox Window theme in Lumina-Config has been fixed.\n  The default intiial size of Lumina-Config has been increased to make scrolling not nessary when initally starting the utility.\n  The title of the Lumina-Archiver displayed in the window\u0026rsquo;s title bar has been corrected.\n  Two of the Lumina icons that were low grade PNGs and have been replaced with scalable SVG icons.\n  Several Build Scripts for various distros have been added to the Lumina Port directory. Users should use the packages provided by their distro, however this have been included to assit in the packaging efforts for other distros, and as an archival record of what was required for each distribution.\n  The Docs have been upated to reflect that the minimum Qt version for Lumina is 5.12.0.\n  Note to Developers looking for a project to contribute to. I will be making a post shortly about these items, but I figured I\u0026rsquo;d go ahead and touch on the matter now. There are a few larger tasks in Lumina where my skills are lacking that I would greatly appreciate some assitance with. If there\u0026rsquo;s anyone with experience in C++ and/or Qt, and would be willing to contribute to Lumina under its BSD3-Clause License, please reach out. Again I\u0026rsquo;ll be making a seperate post shortly about this in more detail. Once that post has been published I will link to it here.\nCommunity Links  Telegram: \u0026ldquo;Lumina Desktop\u0026rdquo; public channel \u0026ldquo;Lumina Desktop\u0026rdquo; public channel on Matrix @ #lumina-desktop:matrix.org  "
},
{
	"uri": "https://lumina-desktop.github.io/post/2021-10-05/",
	"title": "Lumina 1.6.1 released.",
	"tags": [],
	"description": "It&#39;s about time...",
	"content": "Yes the project is still alive. And in fact there\u0026rsquo;s been a release!\nLumina Desktop v1.6.1\nIt\u0026rsquo;s only been 611 days\u0026hellip; that\u0026rsquo;s not too long right?\nAnyway onto the point, yes the project is still alive and there\u0026rsquo;s been some updates. This release encompases two main things.\nFirst is a collection of minor fixes that have gone into master since 1.6.0 came out, along with some translation updates. This includes two small additional binaries for use by the desktop.\nSecond is that the downstream theme work that we did for Project Trident is now in Lumina as the default theme.\nNote to Packagers: As of this version there is an additional dependency on the La Capitaine Icon Theme. The fallback old Google Material Design Icon Themes are still included for OSes and distros without a package for La Capitaine, however we are planning on eventually removing them at some point in the future. For more information on that icon theme, see the updated Core [ReadMe] for a link to that icon themes' github repo.\nCommunity Links Lastly, we do have some community channels for interaction. I cant remember when we made the Telegram channel, but the Matrix channel is new. They are bridged so you only need to join one, but if you\u0026rsquo;d like to stay up to date with the project, feel free to join either.\n Telegram: \u0026ldquo;Lumina Desktop\u0026rdquo; public channel \u0026ldquo;Lumina Desktop\u0026rdquo; public channel on Matrix @ #lumina-desktop:matrix.org  "
},
{
	"uri": "https://lumina-desktop.github.io/post/2021-07-01/",
	"title": "Study the past if you would define the future.",
	"tags": [],
	"description": "The past and future of the Lumina desktop",
	"content": "History \u0026ldquo;Study the past if you would define the future.\u0026rdquo; ~Confucius\nBefore we discuss the Lumina Desktop today, lets first go back and discuss the past. The Lumina Desktop was started in 2012 by Ken Moore. He started working on it in his free time. He wanted to design a small lightweight desktop for PC-BSD that didn\u0026rsquo;t come with the challenge of dealing with Linux-isms. However instead of designing a desktop that had BSD-isms, he decided to design the desktop to be as OS agnostic as possible with as few dependecies as possible. In time, Lumina became the default desktop for PC-BSD. In early 2014 the Lumina code from the PC-BSD git repo was moved to Github.\nI met Ken for the first time in the summer of 2014 at Southeast Linuxfest. Myself and Noah Cheliah had gone to SELF to cover the conference for the LinuxActionShow which I was the producer of at the time. I chatted with Ken for about 10 minutes about a variety of things and when he learned that I was a Puppylinux developer and that I liked small effecient and minimal systems he asked what Desktop I used. While explaining the whys behind my use of Openbox he had this almost Schoolgirl-esque smirk on his face, so after a few minutes I stopped and asked him what was so funny. He chuckled and then let me know that he was writing a small minimal desktop, and proceded to show me his laptop where he had a very early version of it running. I asked him what version it was and he remarked that there weren\u0026rsquo;t even version numbers yet, and I replied, \u0026ldquo;Ok\u0026hellip; so like 0.4?\u0026rdquo; to which he laughed and said \u0026ldquo;Sure.\u0026rdquo;\nAfter getting home from SELF and getting settled back into my schedule I eventually got it compiling and running on my Slackware box. From that point on I helped Ken with fuzzing the desktop and reporting bugs. The Majority of the issues turned out to be really weird ones due to the differences between Qt on Linux and FreeBSD. I think the most hiliarious one was being able to crash the file manager, by opening it up and hitting Down-Down-Enter. I could reproduce it like clockwork on Linux, Ken was unable to on FreeBSD. Eventually the necessity of being able to reproduce each others bugs caused me to get involved with the PC-BSD project. I worked with that project up through its name change into TrueOS, and then the later sunsetting of the TrueOS Desktop. At this point Ken and I created Project Trident to give the current TrueOS Desktop users somewhere to land. The work continued on Project Trident up through 2019 and its transition to Linux as its base OS. Project Trident has lived on as a Desktop variant of Void Linux. Then of course 2020 happened, and now in 2021, life circumstances and priorities are different.\nSo where are things going from here. Well, there\u0026rsquo;s still a lot I want to do with Lumina, There\u0026rsquo;s a few things I\u0026rsquo;m in the middle of that I need to finish, and there\u0026rsquo;s a bunch of other thing that just haven\u0026rsquo;t been finished and there\u0026rsquo;s a few things that haven\u0026rsquo;t ever gotten started.\nBut before I go into a breakdown of the Future of Lumina let me address one thing that I\u0026rsquo;ve been hounded with the past week.\nWill Lumina be relicensed to the GPL? I gotta be honest, I didn\u0026rsquo;t expect to get so many questions about this so quickly. Ken has been asked a bunch over the past few years, but the number of times I\u0026rsquo;ve been asked this week has been kinda hilarious.\nIt\u0026rsquo;s almost as if someone got on the GPL-Bat-Phone and said \u0026ldquo;The BSD guy has stepped back, the Linux guy is in charge now\u0026hellip; GO GO GO.\u0026quot;\nFirst off\u0026hellip; Maintainer != Copyright holder. I can\u0026rsquo;t relicense code I didn\u0026rsquo;t write. Even if I wanted to, I cant. There are 76 contributers to Lumina-Desktop Repo. Each of those would either A) re-write all those submissions. B) have each of those contributers agree to relicense their code or C) turn over claim to the code copyright of their submissions to the project, as happens with contributer agreements that some projects use. Should Lumina have something like that, perhaps. It\u0026rsquo;s probably something that should be done sooner than later, as eventually people can\u0026rsquo;t be reached for a multitude of reasons\u0026hellip; but honestly I\u0026rsquo;ve got to many other things to do within Lumina for me to spend time on that right now.\nThe other question I\u0026rsquo;ve been asked quite a bit is if Lumina will become a 1st part citizen on Linux. In a way it already is. Since Lumina was primarily designed to be OS Agnoistic as long as it\u0026rsquo;s running on a unix-like OS. It\u0026rsquo;s dependencies are very minimal, mostly X.org, Qt and a few other minor libraries. It was never designed to be BSD Only. It honestly super easy to build it on my Slackware box in 2014, and it still is today. My intentions are to keep Lumina as OS Agnostic as Ken designed it to be. Currently Lumina is the default desktop for Project-Trident, and one of these days I may work up a Fedora Spin for Lumina now that I\u0026rsquo;m the maintainer of Fedora-Jam.\nSo enough yammering on, what does the Future roadmap look like. I can break this down into two main catagories, minor changes and major changes.\nThe minor tasks: In the minor camp, there are a bunch of things to make the Desktop work better.\n Make all user icons customizable:  Currently only a few are (User Menu Icon) they all should be able to be reset to whatever the user wants.\n Wallpaper creator:  A simple wallpaper creator to take any image and crop/zoom to make a clean desktop wallpaper based on whatever resolution you want.\n A panel web search widget:  Just a little widget that\u0026rsquo;s a text box where you can enter something and it\u0026rsquo;ll open a browser tab and search for that string. Basically just streamline the multiple steps of opening a browser, going to a search engine, and then searching for whatever.\n Clean up the Font viewer:  One already exists in my personal repo, it never got polished enough to move into Lumina.\n Quick Lumina Text View and Quick Lumina Image Viewer:  These already exist in my personal reapo, but as with the Font viewer, they arent polished enough. The long term plan was to integrate these directly into the file manager, but it needs to be re-written first. (see below)\n Panel widgets improvements:  There are a lot of oddities with the current widgets. This is most likely because they were some of the first things written and havent been messed with since. Some have scaling problems, some only work if the panel is horizonal and go haywire if its vertical. All of these would probably be resolved if it was given a quick once over and designed better. I put this in the minor tasks area, because they\u0026rsquo;re all small individual bits that could be done individualy. We have also needed some new plugins written as well, so that\u0026rsquo;d fall under this as well.\n  Make the current Trident theme the default theme for Lumina.\n  Integrate Icon Theme:\n  The current icon theme we\u0026rsquo;re using in Trident is GPL, so we can\u0026rsquo;t just merge it in as the default. I\u0026rsquo;d like to find a icon designer who would be willing to work with me on a simple icon theme for Lumina as the default. It wouldn\u0026rsquo;t be many icons, I\u0026rsquo;m guessing maybe 50 total. I only want to cover what\u0026rsquo;s in Lumina/Trident and leave the rest to be filled in by a user as they add their own icon themes.\n Bring lumina-notify back in:  This was a small utility I made a long time ago as a quick drop in replacement for gtknotify that I learned to love when I was a PuppyLinux Dev. I think at some point it ended up getting dropped out of the build and it needs to get brought back in, as the plan was to use it for user notifications.\n Lumina Website:  Not really desktop related, but this needs to be refreshed.\nThe major tasks:  cmake conversion:  Right now there are a bunch of build issues on various Linux OSes because of some weird interaction between using Qmake with the .pro files and building them with make. Qt6 is moving away from qmake and going to cmake, and this will be resolved when that\u0026rsquo;s done.\n Qt6 conversion:  This speaks for itself.\n Lumina-FM:  The file manager needs a re-write to use the qfilesystem class. I know there are bunch of other desktops that have already done this, but since they\u0026rsquo;re GPL, I cant take thier work. Besides the re-write there are a few features that are currently in the file manager that need to be re-implemented and a couple new features to be added.\n Lumina-Config:  I\u0026rsquo;m in the middle of re-writing the Lumina-Config utility, that will then enable different configuration options to be directly built into the Panel and the desktop right click menu.\n 2.0 Window Manager:  Ken started working on this and it does technically work. There are issues though. His work needs to be finished. However this may need to finished with the following item in mind.\n Wayland prep:  Wayland is coming\u0026hellip; eventually.\n IFDEFS:  If possible and if and only if it doesnt make the code a nasty mess, I\u0026rsquo;d like to work in ifdefs to resolve downstream issues between BSD/Linux OSes, instead of leaving it up to the OS/Distro devs to patch the sources before building. I\u0026rsquo;d like to get those things fixed upstream to make their life easier.\nFinal Thoughts So that\u0026rsquo;s a quick brain dump of what\u0026rsquo;s in my head at the current moment as far as Lumina. If you\u0026rsquo;d like to help, please reach out, I\u0026rsquo;m easy to track down in all the usual places.\nIn the words of the Tenth Doctor, Allons-y.\n"
},
{
	"uri": "https://lumina-desktop.github.io/post/2021-06-23/",
	"title": "Maintainership Change",
	"tags": [],
	"description": "Lumina desktop maintainer is changing",
	"content": "After more than 7 years of work, I have decided that it is time to let others take over the development of the Lumina Desktop project going forward. It has been an incredible task which has pushed me into areas of development that I had never previously considered. However, with work and life changes, my time for developing new functionality for Lumina has become nearly non-existent, particularly for the Qt5 -\u0026gt; Qt6 change that will be coming within the next year or so. By passing the torch over to JT (q5sys on GitHub), I am hoping that the project might receive more timely updates, for the benefit of everyone.\nThank you all, and I hope for the continued success of the Lumina Desktop project!!\n~~ Ken Moore ~~\nbeanpole135\nProverbs 24:27\n"
},
{
	"uri": "https://lumina-desktop.github.io/404/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Error 404: Page Not Found  It seems that the page that you\u0026rsquo;re trying to access doesn\u0026rsquo;t exist. :worried: If you\u0026rsquo;re sure that it exists, chances are it might have been moved to a new link! You may search for it on the home page. "
},
{
	"uri": "https://lumina-desktop.github.io/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://lumina-desktop.github.io/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]